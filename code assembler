.include "macrolib.s"

.data
found:
.ascii "FOUND"

.align 8

notfound:
.ascii "STOPPED"

.macro fh(%tar, %res)

li t0, 0xffffff88

bne %tar, t0, doit
li %res, 15
j end

doit:

li t0, 16
rem t0, %tar, t0 
li t1, 16
div t1, %tar, t1
li t3, 2
div t0, t0, t3
div t1, t1, t3
li t3, 4

bne t0, t3, doit2
li t0, 3

doit2:

bne t1, t3, doit3
li t1, 3

doit3:

mul t0, t0, t3
add %res, t0, t1

end:
.end_macro 

    .text    
main:

    read_int(s4)
    lui s0, 0xffff0
    li s1, 7
    mv s2, zero
    li s3, 0
    li s6, 16
    li s9, 0x10000000
    mv s5, zero
    li t0, 1
    sb t0, 0x12(s0)
    lb t1, 0x14(s0)
    bnez t1, pres
    li t0, 2
    sb t0, 0x12(s0)
    lb t1, 0x14(s0)
    bnez t1, pres
    li t0, 4
    sb t0, 0x12(s0)
    lb t1, 0x14(s0)
    bnez t1, pres
    li t0, 8
    sb t0, 0x12(s0)
    lb t1, 0x14(s0)
    bnez t1, pres  
    mv s5, zero
    j loop
    
pres:

    beq t1, s5, loop
    mv s5, t1
    print_int(s1)
    newline
    fh(s5, a0)
    mul a0, a0, s9
    add s2, s2, a0
    beq s1, s3, got8
    div s9, s9, s6
    addi s1, s1, -1
    j loop
    
got8:

    beq s4, s2, fd
    beqz s2, stop
    mv s2, zero
    li s1, 7
    li s9, 0x10000000
    j loop
    
fd:

    li a7, 4
    la a0, f
    ecall
    j end
    
stop:

    li a7, 4
    la a0, nf
    ecall
    
end:

    exit
